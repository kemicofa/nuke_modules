use std::{fmt::Display, path::PathBuf};

use crate::bytes::bytes_to_human_readable;

/// Struct that represents a node_modules directory.
#[derive(Debug)]
pub struct NodeModules {
    /// Absolute path of the node_modules directory
    pub path: PathBuf,
    /// Size of the node_modules directory in bytes
    pub size: Option<u64>,
}

impl NodeModules {
    pub fn new(path: PathBuf) -> Self {
        NodeModules { path, size: None }
    }
}

impl Display for NodeModules {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let size: String = match self.size {
            Some(value) => bytes_to_human_readable(value),
            None => "unknown size".to_string(),
        };

        write!(f, "{} ({})", self.path.display(), size)
    }
}
